#Ejercicio2

import pandas as pd

def load_data(file_path):
    """Carga los datos del archivo CSV."""
    return pd.read_csv(file_path)

def demographic_analysis(df):
    """Realiza un análisis demográfico sobre el conjunto de datos."""
    total_entries = df.shape[0]
    race_count = df['race'].value_counts()
    avg_age_men = df[df['sex'] == 'Male']['age'].mean()
    higher_education = df[df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])]
    higher_education_percentage = (higher_education.shape[0] / total_entries) * 100
    higher_education_rich = (higher_education[higher_education['salary'] == '>50K'].shape[0] / higher_education.shape[0]) * 100
    lower_education = df[~df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])]
    lower_education_rich = (lower_education[lower_education['salary'] == '>50K'].shape[0] / lower_education.shape[0]) * 100
    min_work_hours = df['hours-per-week'].min()
    min_workers = df[df['hours-per-week'] == min_work_hours]
    rich_min_workers = (min_workers[min_workers['salary'] == '>50K'].shape[0] / min_workers.shape[0]) * 100
    country_salary_ratio = (df[df['salary'] == '>50K']['native-country'].value_counts() / df['native-country'].value_counts()) * 100
    highest_earning_country = country_salary_ratio.idxmax()
    highest_earning_country_percentage = country_salary_ratio.max()
    top_IN_occupation = df[(df['native-country'] == 'India') & (df['salary'] == '>50K')]['occupation'].value_counts().idxmax()
    return {
        'race_count': race_count,
        'avg_age_men': avg_age_men,
        'higher_education_percentage': higher_education_percentage,
        'higher_education_rich': higher_education_rich,
        'lower_education_rich': lower_education_rich,
        'min_work_hours': min_work_hours,
        'rich_min_workers': rich_min_workers,
        'highest_earning_country': highest_earning_country,
        'highest_earning_country_percentage': highest_earning_country_percentage,
        'top_IN_occupation': top_IN_occupation
    }

def main():
    """Función principal para ejecutar el análisis."""
    file_path = 'adult.data.csv'  # Asegúrate de tener este archivo en el mismo directorio
    df = load_data(file_path)
    results = demographic_analysis(df)
    for key, value in results.items():
        print(f"{key}: {value}")

if __name__ == "__main__":
    main()
